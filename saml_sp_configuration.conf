map $host $saml_sp_entity_id {
    # Unique identifier that identifies the SP to the IdP.
    default "http://sp.route443.dev";
}

map $host $saml_sp_acs_url {
    # SP endpoint that the IdP will send the SAML Response to after successful authentication.
    # Can be hardcoded, but need for XML Metadata generation
    default "http://sp.route443.dev/saml/acs";
}

map $host $saml_sp_relay_state {
    # Optional parameter that can be used to send additional data along with the SAML authn message.
    # Can be used to identify the initial authentication request. For example via NGINX $request_id.
    default "";
}

map $host $saml_sp_signing_key {
    # Maps SP to the private key file that will be used to sign the AuthnRequest or LogoutRequest sent to the IdP.
    default "conf/authn_sign.key";
}

map $host $saml_sp_force_authn {
    # Whether the SP should force re-authentication of the user by the IdP.
    default "true";
}

map $host $saml_sp_nameid_format {
    # Indicates the desired format of the name identifier in the SAML assertion generated by the IdP.
    # Check section 8.3 of http://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf
    # for the list of allowed NameID Formats.
    default "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress";
}

map $host $saml_sp_want_signed_response {
    # Whether the SP wants the SAML Response from the IdP to be digitally signed.
    # By default is "true"
    default "true";
}

map $host $saml_sp_want_signed_assertion {
    # Whether the SP wants the SAML Assertion from the IdP to be digitally signed.
    # By default is "true"
    default "true";
}

map $host $saml_sp_request_binding {
    # Refers to the method by which an authentication request is sent from
    # the SP to an IdP during the Single Sign-On (SSO) process.
    # Only HTTP-POST or HTTP-Redirect methods are allowed.
    default 'HTTP-POST';
}

map $host $saml_idp_entity_id {
    # Unique identifier that identifies the IdP to the SP.
    default "http://idp.route443.dev:8080/simplesaml/saml2/idp/metadata.php";
}

map $host $saml_idp_sso_url {
    # IdP endpoint that the SP will send the AuthnRequest to initiate an authentication process.
    default "http://idp.route443.dev:8080/simplesaml/saml2/idp/SSOService.php";
}

map $host $saml_idp_verification_certificate {
    # Certificate file that will be used to verify the digital signature on the SAML Response
    # received from the IdP.
    default "conf/saml.spki";
}

map $host $saml_idp_sign_authn {
    # Whether the SP should sign the AuthnRequest sent to the IdP.
    default "true";
}

map $host $saml_logout_landing_page {
    # Where to send browser after requesting /logout location. This can be
    # replaced with a custom logout page, or complete URL.
    default "/_logout"; # Built-in, simple logout page
}

map $host $saml_sp_slo_url {
    # SP endpoint that the IdP will send the SAML Logout Request to initiate a logout process.
    default "http://sp.route443.dev/saml/sls";
}

map $host $saml_sp_slo_binding {
    # Refers to the method by which a SLO request or response is sent from
    # the SP to an IdP during the Single Logout (SLO) process.
    # Only HTTP-POST or HTTP-Redirect methods are allowed.
    default 'HTTP-POST';
}

map $host $saml_idp_slo_url {
    # IdP endpoint that the SP will send the LogoutRequest to initiate a logout process.
    default "http://idp.route443.dev:8080/simplesaml/saml2/idp/SingleLogoutService.php";
}

map $host $saml_idp_sign_slo {
    # Whether the SP must sign the LogoutRequest sent to the IdP.
    default "true";
}

map $host $saml_sp_want_signed_slo {
    # Whether the SP wants the SAML Logout Request or Response from the IdP to be digitally signed.
    default "false";
}

map $proto $saml_cookie_flags {
    http  "Path=/; SameSite=lax;"; # For HTTP/plaintext testing
    https "Path=/; SameSite=lax; HttpOnly; Secure;"; # Production recommendation
}

map $host $saml_hmac_key {
    default "ChangeMe";
}

map $http_x_forwarded_proto $proto {
    ""      $scheme;
    default $http_x_forwarded_proto;
}

# ADVANCED CONFIGURATION BELOW THIS LINE
# Additional advanced configuration (server context) in saml_sp.server_conf

######### zones
# Change timeout values to at least the validity period of each token type
keyval_zone zone=saml_requestid_storage:1M          state=saml_requestid_storage.json       timeout=5m;
keyval_zone zone=saml_responseid_storage:1M         state=saml_responseid_storage.json      timeout=1h;
keyval_zone zone=saml_session_access:1M             state=saml_session_access.json          timeout=1h;
keyval_zone zone=saml_nameid:1M                     state=saml_nameid.json                  timeout=1h;
keyval_zone zone=saml_sessionindex:1M               state=saml_sessionindex.json            timeout=1h;
keyval_zone zone=saml_authncontextclassref:1M       state=saml_authncontextclassref.json    timeout=1h;
keyval_zone zone=saml_attrib_uid:1M                 state=saml_attrib_uid.json              timeout=1h;
keyval_zone zone=saml_attrib_name:1M                state=saml_attrib_name.json             timeout=1h;
keyval_zone zone=saml_attrib_memberOf:1M            state=saml_attrib_memberOf.json         timeout=1h;

######### keyvals
keyval $saml_request_id $saml_request_redeemed      zone=saml_requestid_storage;       # Store SAML request ID
keyval $saml_request_id $saml_initial_url           zone=saml_requestid_storage;
keyval $saml_response_id $saml_response_redeemed    zone=saml_responseid_storage;      # Store SAML response ID

keyval $cookie_auth_token $location_root_granted    zone=saml_session_access;          # keep sesisons
keyval $cookie_auth_token $nameid                   zone=saml_nameid;                  # SAML NameID
keyval $cookie_auth_token $sessionindex             zone=saml_sessionindex;            # SAML SessionIndex
keyval $cookie_auth_token $authncontextclassref     zone=saml_authncontextclassref;    # SAML AuthnContextClassRef

keyval $cookie_auth_token $uid                      zone=saml_attrib_uid;
keyval $cookie_auth_token $name                     zone=saml_attrib_name;
keyval $cookie_auth_token $memberOf                 zone=saml_attrib_memberOf;

js_import samlsp from saml_sp.js;
js_import deflateRaw from pako.es5.js; # External library for the Deflate function (will be replaced by native zlib support)
